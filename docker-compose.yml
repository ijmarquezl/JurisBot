# Docker Compose for Multi-Tenant Architecture
# This setup reflects a professional, scalable, and secure architecture.
version: '3.8'

services:
  # --- SHARED SERVICES (for all tenants) ---

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80" # Host:Container
    depends_on:
      - backend
    networks:
      - jurisconsultor-net

  backend:
    build:
      context: ./jurisconsultor
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres_public
      - postgres_tenant_a # Depends on tenant DBs for health/startup order
      - mongodb_tenant_a
    environment:
      # --- Database URIs ---
      # The backend app will need logic to select the correct tenant DB based on the user.
      PUBLIC_DB_URI: postgresql://${PUBLIC_POSTGRES_USER}:${PUBLIC_POSTGRES_PASSWORD}@postgres_public:5432/${PUBLIC_POSTGRES_DB}
      TENANT_A_POSTGRES_URI: postgresql://${TENANT_A_POSTGRES_USER}:${TENANT_A_POSTGRES_PASSWORD}@postgres_tenant_a:5432/${TENANT_A_POSTGRES_DB}
      TENANT_A_MONGO_URI: mongodb://${TENANT_A_MONGO_USER}:${TENANT_A_MONGO_PASSWORD}@mongodb_tenant_a:27017/${TENANT_A_MONGO_DB}?authSource=admin

      # --- App & Security Config ---
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      
      # --- External Services ---
      LLM_URL: ${LLM_URL}
      EMBEDDING_MODEL_NAME: ${EMBEDDING_MODEL_NAME}
    volumes:
      - ./jurisconsultor/documentos_legales:/docs
    networks:
      - jurisconsultor-net

  postgres_public:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${PUBLIC_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PUBLIC_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PUBLIC_POSTGRES_DB}
    volumes:
      - postgres_public_data:/var/lib/postgresql/data
    networks:
      - jurisconsultor-net

  # --- EXAMPLE TENANT 'A' SERVICES ---
  # In a real production environment, these would be provisioned for each company.

  postgres_tenant_a:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${TENANT_A_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TENANT_A_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TENANT_A_POSTGRES_DB}
    volumes:
      - postgres_tenant_a_data:/var/lib/postgresql/data
    networks:
      - jurisconsultor-net

  mongodb_tenant_a:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${TENANT_A_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${TENANT_A_MONGO_PASSWORD}
    volumes:
      - mongodb_tenant_a_data:/data/db
    networks:
      - jurisconsultor-net

volumes:
  postgres_public_data:
  postgres_tenant_a_data:
  mongodb_tenant_a_data:

networks:
  jurisconsultor-net:
    driver: bridge